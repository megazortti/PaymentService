name: Deploy Terraform

on:
  push:
    branches:
      - main       # só roda quando fizer push na main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3
        # baixa seu código pra runner, incluindo main.tf e pasta lambda

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5
        # instala o terraform na versão especificada

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        # configura as credenciais AWS para o terraform acessar sua conta

      - name: Export variables
        run: |
          echo "TF_VAR_cloudflare_api_token=${{ secrets.cloudflare_api_token }}" >> $GITHUB_ENV
          echo "TF_VAR_domain_name=mazzotti.app" >> $GITHUB_ENV
          echo "TF_VAR_cloudflare_zone_id=${{ secrets.cloudflare_zone_id }}" >> $GITHUB_ENV
        # exporta as variáveis para o ambiente do Terraform

      - name: Terraform Init
        run: terraform -chdir=infra init -reconfigure
        # inicializa o terraform (baixa providers, etc)
      
      - name: Zipar Lambda Main
        working-directory: lambda/create_payment
        run: |
          npm install
          zip -r function.zip index.js node_modules package.json package-lock.json

      - name: Zipar Lambda Webhook
        working-directory: lambda/payment_webhook
        run: |
          npm install
          zip -r function.zip index.js node_modules package.json package-lock.json

      - name: Terraform Validate
        run: terraform -chdir=infra validate
        # valida sintaxe e configurações do terraform

      - name: Terraform Plan
        run: terraform -chdir=infra plan
        # gera o plano do que vai mudar na AWS (exibe no log)

      - name: Terraform Apply
        run: terraform -chdir=infra apply -auto-approve
        # aplica as mudanças na AWS automaticamente
